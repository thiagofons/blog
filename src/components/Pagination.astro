---
import { useTranslations, useTranslatedPath } from "@i18n/utils";

interface Props {
    lang: string;
    currentPage: number;
    lastPage: number;
    basePath: string;
}

const { lang, currentPage, lastPage, basePath } = Astro.props;
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Generate navigation URLs
const prevUrl =
    currentPage > 1
        ? currentPage === 2
            ? translatePath(basePath)
            : `${translatePath(basePath)}/${currentPage - 1}`
        : null;
const nextUrl =
    currentPage < lastPage
        ? `${translatePath(basePath)}/${currentPage + 1}`
        : null;
---

{
    (prevUrl || nextUrl) && (
        <nav role="navigation" aria-label={t("blog:pagination.label")}>
            <div class="pagination">
                {/* Previous Button */}
                {prevUrl ? (
                    <a
                        href={prevUrl}
                        rel="prev"
                        class="button"
                        aria-label={t("blog:pagination.previousPage")}
                    >
                        ← {t("blog:pagination.previous")}
                    </a>
                ) : (
                    <span
                        class="button disabled"
                        aria-disabled="true"
                        aria-label={t("blog:pagination.noPreviousPage")}
                    >
                        ← {t("blog:pagination.previous")}
                    </span>
                )}

                {/* Current Page */}
                <span
                    class="current"
                    aria-current="page"
                    aria-label={t("blog:pagination.currentPage", {
                        page: currentPage,
                    })}
                >
                    {t("blog:pagination.pageOf", {
                        current: currentPage,
                        lastPage: lastPage,
                    })}
                </span>

                {/* Next Button */}
                {nextUrl ? (
                    <a
                        href={nextUrl}
                        rel="next"
                        class="button"
                        aria-label={t("blog:pagination.nextPage")}
                    >
                        {t("blog:pagination.next")} →
                    </a>
                ) : (
                    <span
                        class="button disabled"
                        aria-disabled="true"
                        aria-label={t("blog:pagination.noNextPage")}
                    >
                        {t("blog:pagination.next")} →
                    </span>
                )}
            </div>
        </nav>
    )
}
